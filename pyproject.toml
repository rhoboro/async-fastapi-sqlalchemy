[project]
name = "async-fastapi-sqlalchemy"
version = "0.1.0"
description = "Async Web API with FastAPI + SQLAlchemy 2.0"
readme = "README.md"
requires-python = "==3.13.*"
dependencies = [
    "alembic>=1.14.1",
    "black>=25.1.0",
    "fastapi[standard]>=0.115.8",
    "pydantic-settings>=2.7.1",
    "sqlalchemy[postgresql-asyncpg]>=2.0.38",
]

[tool.black]
line-length = 100

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = ["E", "F", "I"]

[tool.ruff.lint.per-file-ignores]
"app/models/__init__.py" = ["F401"]

[tool.mypy]
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = [
  "app.*"
]
ignore_missing_imports = true
follow_imports = "normal"
disallow_untyped_defs = true
disallow_untyped_calls = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
disable_test_id_escaping_and_forfeit_all_rights_to_community_support = true
testpaths = [
  "app"
]
addopts = "-v -rsxX -l --tb=short --strict --cov=app -p no:warnings"
xfails_strict = true
markers = [
  "tmp: Temporary",
  "optional: Optional",
]
env = [
  "APP_CONFIG_FILE=test"
]

[dependency-groups]
testing = [
    "eqassertions>=0.4",
    "httpx>=0.28.1",
    "mypy>=1.15.0",
    "psycopg2-binary>=2.9.10",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "pytest-env>=1.1.5",
    "pytest-mock>=3.14.0",
    "pytest-randomly>=3.16.0",
    "ruff>=0.9.6",
]
